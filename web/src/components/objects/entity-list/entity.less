@import (reference) "../../../style/mixins.less";
@import (reference) "../../../style/font-awesome.less";

.entity-list {
  .item {
    @item-min-height: 60px;

    user-select: none;
    cursor: default;
    background: @entity-component-bg;

    // Height is given to the swipe container so that it can swipes the whole height
    // when swiped (done)
    .swipe-container {
      min-height: @item-min-height;
      border-bottom: @entity-component-list-separator-border;
      position: relative;
      padding: 5px 5px;
      display: block;
    }

    // Sets layout inside item container
    .item-container {
      position: relative;

      &.with-picture {
        .picture {
          .center-vertical-element();
          left: 0;
          max-width: 45px;
          padding-left: 5px;
          margin-top: -(@entity-component-padding-between/2);
        }
        .content {
          margin-left: 55px;
        }
      }
      &.no-picture {
        .picture {
          display: none;
        }
      }
    }

    .item-container {
      min-height: @item-min-height;

      .picture {
        .bubble {
          border: 1px solid transparent;
          width: 40px;
          height: 40px;
          border-radius: 40px;
          position: relative;
          font-size: 17px;
          font-weight: bold;

          .bubble-icon {
            .center-element();
            color: white;
          }
        }
      }

      .date {
        position: absolute;
        top: 0; right: 10px;
        text-align: right;
        background: @entity-component-bg;
        padding-left: 5px;
        font-size: 11px;
        height: 14px;
        color: #878787;
        z-index: 1; // make sure times appear on top of titles
      }

      .content {
        margin: 0 @entity-component-padding-side;
        overflow: hidden;
        padding-right: 5px;

        display: flex;
        flex-direction: column;
        justify-content: center;
        min-height: @item-min-height;

        .title1, .title2, .text {
          // add some space between lines
          margin: 4px 0;
        }

        .title1, .title2 {
          .ellipsis-text-overflow();
          .icon {
            margin-right: 3px;
          }
        }

        .title1 {
          .name, .handle, .subject {
            display: inline-block;
            margin-right: 3px;
            height: 15px;
          }

          .handle {
            color: #d0d0d0;
          }
        }

        .text {
          .ellipsis-text-overflow();
          max-height: 60px;
          color: #606060;
          font-size: 12px;
        }
      }

      &.email.unread, &.email-thread.unread {
        .title1, .title2 {
          font-weight: bold;
        }
      }

      &.collection, &.note, &.task, &.default {
        .content {
          .title1 {
            font-weight: bold;
          }
        }
      }

      // Make sure that the input box to edit task name has sufficient space
      &.task {
        .title1 {
          max-height: 30px;
          input {
            width: 80%
          }
        }
      }
    }

    // Background for hover and selected states
    &.hover {
      background: @entity-component-bg-hover;
      .item-actions {
        background: @entity-component-bg-hover;
      }
      .date {
        // hide date since it may overflow from actions
        display: none;
      }
    }

    &.selected {
      background: @entity-component-bg-selected;
      .item-actions, .date {
        background: @entity-component-bg-selected;
      }
    }

    // When item is marked as done, we animate until it's removed
    .swipe-container {
      .transition(~"margin-left 0.1s ease-in");
    }
    &.done {
      background: @entity-component-bg-done;
      .swipe-container {
        margin-left: 100%;
        background: @entity-component-bg;
      }
      .item-actions, .date {
        display: none;
      }
    }


    // Item actions
    .item-actions {
      position: absolute;
      top: 0; right: 0; bottom: 0;
      width: 100px;
      padding-top: 5px;
      padding-right: 10px;
      padding-left: 15px;
      opacity: 0.95;

      ul {
        .make-list();
        .center-vertical-element();

        // make list take 100% so that text-alignment works
        text-align: right;
        left: 5px;
        right: 10px; 

        li {
          .make-list-item();
          display: inline-block;
          color: @entity-component-item-actions-icon-fg;
          &:hover {
            color: @entity-component-item-actions-icon-hover-fg;
          }
          .action-icon {
            margin: 5px;
            font-size: 15px;
          }
        }
      }
    }

    // EntityList and time selector popup
    .collection-selector, .time-selector {
      right: 15px;
      top: 50%;
      .translate(0, 15px);
    }
  }
}
