{
  "historyId": "32946368",
  "id": "17497c02d0f6ad14",
  "messages": [
    {
      "historyId": "32946368",
      "id": "17497c02d0f6ad14",
      "internalDate": "1600272048000",
      "labelIds": [
        "IMPORTANT",
        "CATEGORY_UPDATES",
        "INBOX"
      ],
      "payload": {
        "body": {
          "size": 0
        },
        "filename": "",
        "headers": [
          {
            "name": "Delivered-To",
            "value": "email@gmail.com"
          },
          {
            "name": "Received",
            "value": "by 2002:a05:6838:339a:0:0:0:0 with SMTP id eb26csp597123nkb;        Wed, 16 Sep 2020 09:29:48 -0700 (PDT)"
          },
          {
            "name": "From",
            "value": "NEXUS <ttppost-pvfpostes@cbsa-asfc.gc.ca>"
          },
          {
            "name": "To",
            "value": "Nexus Members"
          },
          {
            "name": "Subject",
            "value": "Updates - NEXUS and FAST Enrolment Centres"
          },
          {
            "name": "Date",
            "value": "Wed, 16 Sep 2020 12:00:48 -0400"
          },
          {
            "name": "MIME-Version",
            "value": "1.0"
          },
          {
            "name": "Content-Type",
            "value": "multipart/alternative; boundary=\"MIMEBoundary452f592fecff651a2eb3216ccb5a1925\""
          },
          {
            "name": "Reply-To",
            "value": "NEXUS <ttppost-pvfpostes@cbsa-asfc.gc.ca>"
          }
        ],
        "mimeType": "multipart/alternative",
        "partId": "",
        "parts": [
          {
            "body": {
              "data": "",
              "size": 7954
            },
            "filename": "",
            "headers": [
              {
                "name": "Content-Type",
                "value": "text/plain; charset=\"ISO-8859-1\""
              },
              {
                "name": "Content-Transfer-Encoding",
                "value": "quoted-printable"
              }
            ],
            "mimeType": "text/plain",
            "partId": "0"
          },
          {
            "body": {
              "data": "PGh0bWw-DQogICAgPGhlYWQ-DQogICAgPC9oZWFkPg0KICAgIDxib2R5Pg0KICAgICAgICA8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI-PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI-PHN0cm9uZz48ZW0-RW5nbGlzaCBWZXJzaW9uICoqKiBMYSB2ZXJzaW9uIGZyYW7Dp2Fpc2Ugc3VpdCAqKio8L2VtPjwvc3Ryb25nPjwvc3Bhbj48L3A-DQogICAgICAgIDxwPkRlYXIgTkVYVVMgTWVtYmVyLDwvcD4NCiAgICAgICAgPHA-VGhlIENhbmFkYSBCb3JkZXIgU2VydmljZXMgQWdlbmN5IChDQlNBKSB3b3VsZCBsaWtlIHRvIHByb3ZpZGUgeW91IHdpdGggYSBudW1iZXIgb2YgdXBkYXRlcy48L3A-DQogICAgICAgIDxwPkZpcnN0LCB0aGUgQ0JTQSB3b3VsZCBsaWtlIHRvIGluZm9ybSB5b3UgdGhhdCBpbiByZXNwb25zZSB0byB0aGUgZ2xvYmFsIHBhbmRlbWljIG9mIENPVklELTE5LCBhbGwgTkVYVVMgYW5kIEZBU1QgZW5yb2xsbWVudCBjZW50cmVzIGFyZSB0ZW1wb3JhcmlseSBjbG9zZWQuPC9wPg0KICAgICAgICA8cD5BcyBhIHJlc3VsdCwgYWxsIE5FWFVTIGFuZCBGQVNUIGludGVydmlld3MgdGhhdCB3ZXJlIHByZXZpb3VzbHkgc2NoZWR1bGVkIHdpbGwgYmUgcG9zdHBvbmVkLiBBcHBsaWNhbnRzIGFuZCBleGlzdGluZyBtZW1iZXJzIHdpbGwgbmVlZCB0byByZXNjaGVkdWxlIGludGVydmlld3MgYWZ0ZXIgdGhlIENCU0EgYW5kIFUuUy4gQ3VzdG9tcyBhbmQgQm9yZGVyIFByb3RlY3Rpb24gKENCUCkgcmVzdW1lIGpvaW50IGVucm9sbG1lbnQgb3BlcmF0aW9ucy4gVGhlIGRhdGUgb2YgcmUtb3BlbmluZyBpcyBjb250aW51YWxseSBhc3Nlc3NlZCBpbiBsaWdodCBvZiBjdXJyZW50IHRyYXZlbCByZXN0cmljdGlvbnMgYW5kIHdlIGludml0ZSB5b3UgdG8gdmlzaXQgdGhlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNic2EtYXNmYy5nYy5jYS9zZXJ2aWNlcy9jb3ZpZC9tZW51LWVuZy5odG1sP3V0bV9zb3VyY2U9bWVtYmVyJmFtcDt1dG1fbWVkaXVtPWVtYWlsJmFtcDt1dG1fY2FtcGFpZ249Q292aWQtMTktYmMtbmV4dXMmYW1wO3V0bV9jb250ZW50PUVOXzAxMDEiPkNCU0Egd2Vic2l0ZTwvYT4gZm9yIHVwZGF0ZXMuPC9wPg0KICAgICAgICA8cD5UbyByZXNjaGVkdWxlIHlvdXIgTkVYVVMgb3IgRkFTVCBpbnRlcnZpZXcgYXBwb2ludG1lbnQsIHBsZWFzZSBsb2cgaW50byB5b3VyIG9ubGluZSA8YSBocmVmPSJodHRwczovL3R0cC5jYnAuZGhzLmdvdi8iPlRydXN0ZWQgVHJhdmVsZXIgUHJvZ3JhbXMgKFRUUCkgU3lzdGVtPC9hPiBhY2NvdW50LiBORVhVUyBhbmQgRkFTVCBtZW1iZXJzIHdobyBzdWJtaXR0ZWQgYW4gYXBwbGljYXRpb24gZm9yIG1lbWJlcnNoaXAgcmVuZXdhbCBwcmlvciB0byB0aGUgZXhwaXJ5IGRhdGUgb24gdGhlIGNhcmQgd2lsbCBtYWludGFpbiB0aGVpciBtZW1iZXJzaGlwIGZvciAxOCBtb250aHMgYmV5b25kIHRoZSBleHBpcnkgZGF0ZS48L3A-DQogICAgICAgIDxwPlNlY29uZCwgdGhlIFZhbmNvdXZlciBVcmJhbiBFbnJvbGxtZW50IENlbnRyZSBmb3IgTkVYVVMgYW5kIEZBU1QgaW50ZXJ2aWV3cyB3aWxsIG5vdCBiZSByZS1vcGVuaW5nIHRvIHRoZSBwdWJsaWMgb25jZSBDT1ZJRC0xOSByZXN0cmljdGlvbnMgYXJlIGVhc2VkLiBJbnRlcnZpZXdzIG1heSBiZSBzY2hlZHVsZWQgYXQgYW55IG9mIHRoZSBvdGhlciBlbnJvbGxtZW50IGNlbnRyZXMgYWZ0ZXIgdGhleSByZS1vcGVuLCBpbmNsdWRpbmcgYXQgdGhlIG5lYXJieSBWYW5jb3V2ZXIgSW50ZXJuYXRpb25hbCBBaXJwb3J0IG9yIGluIEJpcmNoIEJheSwgV2FzaGluZ3Rvbi48L3A-DQogICAgICAgIDxwPkZpbmFsbHksIGFzIHBhcnQgb2YgQ2FuYWRh4oCZcyBlZmZvcnRzIHRvIHJlZHVjZSB0aGUgc3ByZWFkIG9mIENPVklELTE5LCBhbGwgdHJhdmVsbGVycyDigJMgPHN0cm9uZz5pbmNsdWRpbmcgdGhvc2Ugb24gZXhlbXB0IHRyYXZlbCDigJM8L3N0cm9uZz4gYXJlIHJlcXVpcmVkIHRvIHByb3ZpZGUgc3BlY2lmaWMgaW5mb3JtYXRpb24gdXBvbiBlbnRyeSBpbnRvIENhbmFkYS4gVGhlIHJlY2VudGx5IGxhdW5jaGVkPHN0cm9uZz4gQXJyaXZlQ0FOIGFwcCA8L3N0cm9uZz5lbmFibGVzIHlvdSB0byBzdWJtaXQgeW91ciBpbmZvcm1hdGlvbiB1cCB0byA0OCBob3VycyBwcmlvciB0byB5b3VyIGFycml2YWwuIEl0IHJlZHVjZXMgcGh5c2ljYWwgY29udGFjdCBmb3IgYSBzYWZlciwgZmFzdGVyIGJvcmRlciBwcm9jZXNzLiBZb3UgY2FuIGRvd25sb2FkIGl0IG9uIHlvdXIgbW9iaWxlIGRldmljZSB0aHJvdWdoIHRoZSA8YSBocmVmPSJodHRwczovL2FwcHMuYXBwbGUuY29tL2NhL2FwcC9hcnJpdmVjYW4vaWQxNTA1Mzk0NjY3Ij5BcHAgU3RvcmU8L2E-IG9yIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD1jYS5nYy5jYnNhLmNvcm9uYXZpcnVzIiB0YXJnZXQ9Il9ibGFuayI-R29vZ2xlIFBsYXk8L2E-LiYjMTYwOzwvcD4NCiAgICAgICAgPHA-PHN0cm9uZz5Zb3UgYXJlIG9uIGV4ZW1wdCB0cmF2ZWw8L3N0cm9uZz4gaWYgeW91IGFyZSBlbnRlcmluZyBDYW5hZGEgdG8gcHJvdmlkZTogdHJhZGUgb3IgdHJhbnNwb3J0IHNlcnZpY2VzOyBlc3NlbnRpYWwgc2VydmljZXM7IGNyb3NzLWJvcmRlciBzZXJ2aWNlcyBvciBtZWRpY2FsIHNlcnZpY2VzLiBJZiB5b3UgaGF2ZSBwcmV2aW91c2x5IHByb3ZpZGVkIGFueSBvZiB0aGVzZSBzZXJ2aWNlcywgYnV0IGFyZSBub3cgZW50ZXJpbmcgQ2FuYWRhIGZvciBvdGhlciByZWFzb25zLCA8c3Ryb25nPnlvdSBhcmUgbm90IG9uIGV4ZW1wdCB0cmF2ZWw8L3N0cm9uZz4uPC9wPg0KICAgICAgICA8cD5BbGwgdHJhdmVsbGVycyDigJMgPHN0cm9uZz5leGNsdWRpbmcgdGhvc2Ugb248L3N0cm9uZz4gPHN0cm9uZz5leGVtcHQgdHJhdmVsPC9zdHJvbmc-IOKAkyBhcmUgcmVxdWlyZWQgdG8gaXNvbGF0ZSBvciBxdWFyYW50aW5lIGZvciAxNCBkYXlzIGFmdGVyIGVudGVyaW5nIENhbmFkYS4gQXQgdGhlIGJvcmRlciwgeW91IHdpbGwgbmVlZCB0byBwcm92aWRlIGRldGFpbHMgb24gd2hlcmUgeW91IHdpbGwgYmUgcXVhcmFudGluaW5nLiBBZnRlciBjcm9zc2luZyB0aGUgYm9yZGVyLCB5b3Ugd2lsbCBuZWVkIHRvIGNoZWNrLWluIHdpdGggdGhlIFB1YmxpYyBIZWFsdGggQWdlbmN5IG9mIENhbmFkYSBhYm91dCB5b3VyIHN5bXB0b21zLCBhbmQgY29uZmlybSB5b3UgYXJlIHN0aWNraW5nIHdpdGggeW91ciBxdWFyYW50aW5lIHBsYW4uIFRoZSA8c3Ryb25nPkFycml2ZUNBTiBhcHA8L3N0cm9uZz4gd2lsbCBlbmFibGUgeW91IHRvIGFsc28gc3VibWl0IHRoaXMgaW5mb3JtYXRpb24uPC9wPg0KICAgICAgICA8cD5WaXNpdCA8YSBocmVmPSJodHRwczovL3d3dy5jYnNhLWFzZmMuZ2MuY2Evc2VydmljZXMvY292aWQvbWVudS1lbmcuaHRtbD91dG1fc291cmNlPW1lbWJlciZhbXA7dXRtX21lZGl1bT1lbWFpbCZhbXA7dXRtX2NhbXBhaWduPUNvdmlkLTE5LWJjLW5leHVzJmFtcDt1dG1fY29udGVudD1FTl8wMTAxIj48c3Ryb25nPkN1cnJlbnQgYm9yZGVyIG1lYXN1cmVzIGFuZCByZXF1aXJlbWVudHM8L3N0cm9uZz48L2E-IGZvciBpbmZvcm1hdGlvbiBhYm91dCBob3cgQ09WSUQtMTkgaXMgYWZmZWN0aW5nIHRyYXZlbGxlcnMsIGJvcmRlciBzZXJ2aWNlcywgcHJvZ3JhbXMgYW5kIGJ1c2luZXNzLjwvcD4NCiAgICAgICAgPHA-V2Ugc2luY2VyZWx5IGFwb2xvZ2l6ZSBmb3IgdGhlIGluY29udmVuaWVuY2UgYW5kIGFwcHJlY2lhdGUgeW91ciBwYXRpZW5jZSB0aHJvdWdoIHRoaXMgcHJvY2Vzcy48L3A-DQogICAgICAgIDxwPiYjMTYwOzwvcD4NCiAgICAgICAgPHA-U2luY2VyZWx5LDwvcD4NCiAgICAgICAgPHA-VHJhdmVsbGVycyBQb2xpY3kgYW5kIFByb2dyYW1zIERpcmVjdG9yYXRlPC9wPg0KICAgICAgICA8cD5DYW5hZGEgQm9yZGVyIFNlcnZpY2VzIEFnZW5jeTwvcD4NCiAgICAgICAgPHA-JiMxNjA7PC9wPg0KICAgICAgICA8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI-PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI-PHN0cm9uZz48ZW0-VmVyc2lvbiBmcmFuw6dhaXNlICoqKiBUaGUgRW5nbGlzaCB2ZXJzaW9uIHByZWNlZGVzICoqKjwvZW0-PC9zdHJvbmc-PC9zcGFuPjwvcD4NCiAgICAgICAgPHA-Q2hlciBtZW1icmUgZGUgTkVYVVMsPC9wPg0KICAgICAgICA8cD5MJ0FnZW5jZSBkZXMgc2VydmljZXMgZnJvbnRhbGllcnMgZHUgQ2FuYWRhIChBU0ZDKSB0aWVudCDDoCB2b3VzIGZvdXJuaXIgcGx1c2lldXJzIG1pc2VzIMOgIGpvdXIuPC9wPg0KICAgICAgICA8cD5QcmVtacOocmVtZW50LCBs4oCZQVNGQyBhaW1lcmFpdCB2b3VzIGluZm9ybWVyIHF1ZSwgZW4gcsOpcG9uc2Ugw6AgbGEgcGFuZMOpbWllIG1vbmRpYWxlIGRlIGxhIENPVklELTE5LCB0b3VzIGxlcyBjZW50cmVzIGQnaW5zY3JpcHRpb24gTkVYVVMgZXQgRVhQUkVTIHNvbnQgdGVtcG9yYWlyZW1lbnQgZmVybcOpcy48L3A-DQogICAgICAgIDxwPkFpbnNpLCB0b3V0ZXMgbGVzIGVudHJldnVlcyBORVhVUyBldCBFWFBSRVMgcXVpIGF2YWllbnQgcHLDqWPDqWRlbW1lbnQgw6l0w6kgZml4w6llcyBzZXJvbnQgcmVwb3J0w6llcy4gTGVzIGNhbmRpZGF0cyBldCBsZXMgbWVtYnJlcyBhY3R1ZWxzIGRldnJvbnQgcmVwb3J0ZXIgbGV1cnMgZW50cmV2dWVzIMOgIHVuZSBkYXRlIHVsdMOpcmlldXJlIMOgIGxhIGRhdGUgw6AgbGFxdWVsbGUgbCdBU0ZDIGV0IGxlIFNlcnZpY2UgZGVzIGRvdWFuZXMgZXQgZGUgbGEgcHJvdGVjdGlvbiBkZXMgZnJvbnRpw6hyZXMgZGVzIMOJdGF0cy1VbmlzIGF1cm9udCByZXByaXMgbGV1cnMgb3DDqXJhdGlvbnMgZCdpbnNjcmlwdGlvbiBjb25qb2ludGVzLiBMYSBkYXRlIGRlIHLDqW91dmVydHVyZSBlc3QgY29udGludWVsbGVtZW50IMOpdmFsdcOpZSDDoCBsYSBsdW1pw6hyZSBkZXMgcmVzdHJpY3Rpb25zIGRlIHZveWFnZSBhY3R1ZWxsZXMsIGV0IG5vdXMgdm91cyBpbnZpdG9ucyDDoCBjb25zdWx0ZXIgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2JzYS1hc2ZjLmdjLmNhL3NlcnZpY2VzL2NvdmlkL21lbnUtZnJhLmh0bWw_dXRtX3NvdXJjZT1tZW1iZXImYW1wO3V0bV9tZWRpdW09ZW1haWwmYW1wO3V0bV9jYW1wYWlnbj1Db3ZpZC0xOS1iYy1uZXh1cyZhbXA7dXRtX2NvbnRlbnQ9RlJfMDEwMiI-bGUgc2l0ZSBXZWIgZGUgbCdBU0ZDPC9hPiBwb3VyIHVuZSBtaXNlIMOgIGpvdXIuPC9wPg0KICAgICAgICA8cD5Qb3VyIHJlcG9ydGVyIGxhIGRhdGUgZGUgdm90cmUgZW50cmV2dWUsIHZldWlsbGV6IG91dnJpciB1bmUgc2Vzc2lvbiBkYW5zIHZvdHJlIGNvbXB0ZSBlbiBsaWduZSBhdmVjIGxlIDxhIGhyZWY9Imh0dHBzOi8vdHRwLmNicC5kaHMuZ292LyI-c3lzdMOobWUgZGUgUHJvZ3JhbW1lcyBwb3VyIHZveWFnZXVycyBkaWduZSBkZSBjb25maWFuY2U8L2E-LiBMZXMgbWVtYnJlcyBkZSBORVhVUy9FWFBSRVMgcXVpIG9udCBzb3VtaXMgdW5lIGRlbWFuZGUgZGUgcmVub3V2ZWxsZW1lbnQgZOKAmWFkaMOpc2lvbiBhdmFudCBsYSBkYXRlIGQnZXhwaXJhdGlvbiBkZSBsZXVyIGNhcnRlIGNvbnNlcnZlcm9udCBsZXVyIGFkaMOpc2lvbiBwZW5kYW50IDE4IG1vaXMgYXUtZGVsw6AgZGUgbGEgZGF0ZSBkJ2V4cGlyYXRpb24uPC9wPg0KICAgICAgICA8cD5EZXV4acOobWVtZW50LCBsZSBjZW50cmUgZCdpbnNjcmlwdGlvbiB1cmJhaW4gZGUgVmFuY291dmVyIHBvdXIgTkVYVVMgZXQgRVhQUkVTIG5lIHJvdXZyaXJhIHBhcyBzZXMgcG9ydGVzIGF1IHB1YmxpYyB1bmUgZm9pcyBxdWUgbGVzIHJlc3RyaWN0aW9ucyBsacOpZXMgw6AgbGEgQ09WSUQtMTkgc2Vyb250IGFzc291cGxpZXMuIExlcyBkYXRlcyBk4oCZZW50cmV2dWVzIHBldXZlbnQgw6p0cmUgZml4w6llcyDDoCBsJ3VuIGRlcyBhdXRyZXMgY2VudHJlcyBkJ2luc2NyaXB0aW9uLCBhcHLDqHMgbGV1ciByw6lvdXZlcnR1cmUsIHkgY29tcHJpcyDDoCBsJ2HDqXJvcG9ydCBpbnRlcm5hdGlvbmFsIGRlIFZhbmNvdXZlciDDoCBwcm94aW1pdMOpIG91IMOgIEJpcmNoIEJheSwgV2FzaGluZ3Rvbi48L3A-DQogICAgICAgIDxwPkVuZmluLCBkYW5zIGxlIGNhZHJlIGRlcyBlZmZvcnRzIGTDqXBsb3nDqXMgcGFyIGxlIENhbmFkYSBwb3VyIHLDqWR1aXJlIGxhIHByb3BhZ2F0aW9uIGRlIGxhIENPVklELTE5LCB0b3VzIGxlcyB2b3lhZ2V1cnMg4oCTIDxzdHJvbmc-eSBjb21wcmlzIGNldXggcXVpIHNvbnQgZXhlbXB0w6lzPC9zdHJvbmc-IOKAkyBzb250IHRlbnVzIGRlIGZvdXJuaXIgY2VydGFpbmVzIGluZm9ybWF0aW9ucyDDoCBsZXVyIGVudHLDqWUgYXUgQ2FuYWRhLiA8c3Ryb25nPkwnYXBwbGljYXRpb24gQXJyaXZlQ0FOPC9zdHJvbmc-LCByw6ljZW1tZW50IGxhbmPDqWUsIHZvdXMgcGVybWV0IGRlIHNvdW1ldHRyZSB2b3MgaW5mb3JtYXRpb25zIGp1c3F1J8OgIDQ4IGhldXJlcyBhdmFudCB2b3RyZSBhcnJpdsOpZS4gQ2VsbGUtY2kgcsOpZHVpdCBsZXMgY29udGFjdHMgcGh5c2lxdWVzIHBvdXIgdW4gcHJvY2Vzc3VzIGZyb250YWxpZXIgc8O7ciBldCByYXBpZGUuIFZvdXMgcG91dmV6IGxhIHTDqWzDqWNoYXJnZXIgc3VyIHZvdHJlIGFwcGFyZWlsIG1vYmlsZSBlbiBhbGxhbnQgYXUgPGEgaHJlZj0iaHR0cHM6Ly9hcHBzLmFwcGxlLmNvbS91cy9hcHAvY2FuYXJyaXZlL2lkMTUwNTM5NDY2Nz9tdD04JmFtcDtsPWZyX0NBIj5BcHAgU3RvcmU8L2E-IG91IMOgIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD1jYS5nYy5jYnNhLmNvcm9uYXZpcnVzJmFtcDtobD1mciIgdGFyZ2V0PSJfYmxhbmsiPkdvb2dsZSBQbGF5PC9hPi48L3A-DQogICAgICAgIDxwPjxzdHJvbmc-Vm91cyDDqnRlcyBlbiB2b3lhZ2UgZXhvbsOpcsOpPC9zdHJvbmc-IHNpIHZvdXMgZW50cmV6IGF1IENhbmFkYSBwb3VyIGZvdXJuaXIgZGVzIHNlcnZpY2VzIGNvbW1lcmNpYXV4IG91IGRlIHRyYW5zcG9ydCwgZGVzIHNlcnZpY2VzIGVzc2VudGllbHMsIGRlcyBzZXJ2aWNlcyB0cmFuc2Zyb250YWxpZXJzIG91IGRlcyBzZXJ2aWNlcyBtw6lkaWNhdXguIFNpIHZvdXMgYXZleiBkw6lqw6AgZm91cm5pIGwndW4gZGUgY2VzIHNlcnZpY2VzLCBtYWlzIHF1ZSBwYXIgbGEgc3VpdGUgdm91cyBlbnRyZXogYXUgQ2FuYWRhIHBvdXIgZCdhdXRyZXMgcmFpc29ucywgPHN0cm9uZz52b3VzIG4nw6p0ZXMgcGx1cyBlbiB2b3lhZ2UgZXhvbsOpcsOpPC9zdHJvbmc-LjwvcD4NCiAgICAgICAgPHA-VG91cyBsZXMgdm95YWdldXJzIOKAkyA8c3Ryb25nPsOgIGwnZXhjZXB0aW9uIGRlIGNldXggcXVpIHNvbnQgZW4gdm95YWdlIGV4b27DqXLDqTwvc3Ryb25nPiDigJMgc29udCB0ZW51cyBkZSBzJ2lzb2xlciBvdSBkZSBzZSBtZXR0cmUgZW4gcXVhcmFudGFpbmUgcGVuZGFudCAxNCBqb3VycyBhcHLDqHMgbGV1ciBlbnRyw6llIGF1IENhbmFkYS4gw4AgbGEgZnJvbnRpw6hyZSwgdm91cyBkZXZyZXogZm91cm5pciBkZXMgZMOpdGFpbHMgc3VyIGwnZW5kcm9pdCBvw7kgdm91cyBhdmV6IGzigJlpbnRlbnRpb24gZGUgdm91cyBtZXR0cmUgZW4gcXVhcmFudGFpbmUuIEFwcsOocyBhdm9pciBmcmFuY2hpIGxhIGZyb250acOocmUsIHZvdXMgZGV2cmV6IHZvdXMgcHLDqXNlbnRlciDDoCBsJ0FnZW5jZSBkZSBsYSBzYW50w6kgcHVibGlxdWUgZHUgQ2FuYWRhIHBvdXIgbGVzIGluZm9ybWVyIGRlIHZvcyBzeW1wdMO0bWVzIGV0IGNvbmZpcm1lciBxdWUgdm91cyBhbGxleiByZXNwZWN0ZXIgdm90cmUgcGxhbiBkZSBxdWFyYW50YWluZS4gPHN0cm9uZz5MJ2FwcGxpY2F0aW9uIEFycml2ZUNBTjwvc3Ryb25nPiB2b3VzIHBlcm1ldHRyYSDDqWdhbGVtZW50IGRlIHNvdW1ldHRyZSBjZXMgaW5mb3JtYXRpb25zLjwvcD4NCiAgICAgICAgPHA-Q29uc3VsdGV6IGxlcyA8YSBocmVmPSJodHRwczovL3d3dy5jYnNhLWFzZmMuZ2MuY2Evc2VydmljZXMvY292aWQvbWVudS1mcmEuaHRtbD91dG1fc291cmNlPW1lbWJlciZhbXA7dXRtX21lZGl1bT1lbWFpbCZhbXA7dXRtX2NhbXBhaWduPUNvdmlkLTE5LWJjLW5leHVzJmFtcDt1dG1fY29udGVudD1GUl8wMTAyIj48c3Ryb25nPk1lc3VyZXMgZXQgZXhpZ2VuY2VzIGFjdHVlbGxlcyDDoCBsYSBmcm9udGnDqHJlPC9zdHJvbmc-PC9hPiBwb3VyIHNhdm9pciBkZSBxdWVsbGUgZmHDp29uIGxhIENPVklELTE5IGFmZmVjdGUgbGVzIHZveWFnZXVycywgbGVzIHNlcnZpY2VzIGZyb250YWxpZXJzLCBsZXMgcHJvZ3JhbW1lcyBldCBsZXMgZW50cmVwcmlzZXMuPC9wPg0KICAgICAgICA8cD5Ob3VzIHZvdXMgcHLDqXNlbnRvbnMgbm9zIGV4Y3VzZXMgbGVzIHBsdXMgc2luY8OocmVzIHBvdXIgY2UgZMOpc2FncsOpbWVudCBldCB2b3VzIHJlbWVyY2lvbnMgZGUgdm90cmUgcGF0aWVuY2UgdG91dCBhdSBsb25nIGRlIGNlIHByb2Nlc3N1cy48L3A-DQogICAgICAgIDxwPiYjMTYwOzwvcD4NCiAgICAgICAgPHA-Q29yZGlhbGVtZW50LDwvcD4NCiAgICAgICAgPHA-RGlyZWN0aW9uIGRlcyBwcm9ncmFtbWVzIGV0IGRlcyBwb2xpdGlxdWVzIGRlcyB2b3lhZ2V1cnM8L3A-DQogICAgICAgIDxwPkFnZW5jZSBkZXMgc2VydmljZXMgZnJvbnRhbGllcnM8L3A-DQogICAgICAgIDxwPiYjMTYwOzwvcD4NCiAgICANCjxwPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IHNtYWxsZXIiPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQXJpYWwiPi0tLSA8L3NwYW4-PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IHNtYWxsZXIiPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQXJpYWwiPjxiciB0eXBlPSJfbW96IiAvPg0KICAgICAgICA8L3NwYW4-PC9zcGFuPjwvcD4NCiAgICAgICAgPHA-PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogc21hbGxlciI-PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBBcmlhbCI-VG8gdW5zdWJzY3JpYmUsIHNlbmQgYSBibGFuayBlbWFpbCB0byBsZWF2ZS0zNDA4NDAwNC00NDA3NzMzOS45NThiN2Q3ZjAwN2NiYWZlZjA5YWYzZGNlYmY3ODAyMUBwYWItZGdhcC5saXN0LWxpc3RlLmNyYS1hcmMuZ2MuY2E8L3NwYW4-PC9zcGFuPjwvcD4NCiAgICAgICAgPHA-PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogc21hbGxlciI-PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBBcmlhbCI-IDwvc3Bhbj48L3NwYW4-PC9wPg0KICAgICAgICA8cD48c3BhbiBzdHlsZT0iZm9udC1zaXplOiBzbWFsbGVyIj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IEFyaWFsIj5BZmluIGTigJlhbm51bGVyIHZvdHJlIGFib25uZW1lbnQsIGZhaXRlcyBwYXJ2ZW5pciB1biBjb3VycmllbCB2aWRlIMOgIGxlYXZlLTM0MDg0MDA0LTQ0MDc3MzM5Ljk1OGI3ZDdmMDA3Y2JhZmVmMDlhZjNkY2ViZjc4MDIxQHBhYi1kZ2FwLmxpc3QtbGlzdGUuY3JhLWFyYy5nYy5jYTwvc3Bhbj48L3NwYW4-PC9wPg0KPC9CT0RZPg0KPC9odG1sPg0K",
              "size": 9325
            },
            "filename": "",
            "headers": [
              {
                "name": "Content-Type",
                "value": "text/html; charset=\"ISO-8859-1\""
              },
              {
                "name": "Content-Transfer-Encoding",
                "value": "quoted-printable"
              }
            ],
            "mimeType": "text/html",
            "partId": "1"
          }
        ]
      },
      "sizeEstimate": 22846,
      "snippet": "English Version *** La version française suit *** Dear NEXUS Member, The Canada Border Services Agency (CBSA) would like to provide you with a number of updates. First, the CBSA would like to inform",
      "threadId": "17497c02d0f6ad14"
    }
  ]
}