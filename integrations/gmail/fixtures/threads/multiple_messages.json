{
  "historyId": "32158530",
  "id": "1718e5ac42f4c25a",
  "messages": [
    {
      "historyId": "32158530",
      "id": "1718e5ac42f4c25a",
      "internalDate": "1587231192000",
      "labelIds": [
        "CATEGORY_PROMOTIONS",
        "INBOX"
      ],
      "payload": {
        "body": {
          "size": 0
        },
        "filename": "",
        "headers": [
          {
            "name": "Date",
            "value": "Sat, 18 Apr 2020 13:33:12 -0400"
          },
          {
            "name": "From",
            "value": "\"Estérel Resort\" <Info@reservations.esterel.com>"
          },
          {
            "name": "Reply-To",
            "value": "Info@reservations.esterel.com"
          },
          {
            "name": "To",
            "value": "esterel@quet.ca"
          },
          {
            "name": "Subject",
            "value": "Un peu d'inspirations de la part de nos employés"
          },
          {
            "name": "Mime-Version",
            "value": "1.0"
          },
          {
            "name": "Content-Type",
            "value": "multipart/alternative; boundary=\"--==_mimepart_5e9b39d824aef_13f6efb6bc130451bc\"; charset=UTF-8"
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "7bit"
          }
        ],
        "mimeType": "multipart/alternative",
        "partId": "",
        "parts": [
          {
            "body": {
              "data": "DQoNCg0KVGhpcyBlbWFpbCB3YXMgc2VudCB0byBlc3RlcmVsQHF1ZXQuY2EgYnkgSW5mb0BSZXNlcnZhdGlvbnMuZXN0ZXJlbC5jb20NCk1hbmFnZSBTdWJzY3JpcHRpb25zDQpodHRwOi8vbWNsaW5rcy5yZXNlcnZhdGlvbnMuZXN0ZXJlbC5jb20vYS85MTY0L3Vuc3Vic2NyaWJlLzM0NC8xNTY4NzIvZWRlMzA0NTkxNGExMmViMWQwZTFmODE5YWZjNzcxMmM3ZmJiOTRiNA0KVW5kZWZpbmVkDQoNCg==",
              "size": 226
            },
            "filename": "",
            "headers": [
              {
                "name": "Content-Type",
                "value": "text/plain; charset=UTF-8"
              },
              {
                "name": "Content-Transfer-Encoding",
                "value": "7bit"
              }
            ],
            "mimeType": "text/plain",
            "partId": "0"
          },
          {
            "body": {
              "data": "",
              "size": 56400
            },
            "filename": "",
            "headers": [
              {
                "name": "Content-Type",
                "value": "text/html; charset=UTF-8"
              },
              {
                "name": "Content-Transfer-Encoding",
                "value": "quoted-printable"
              }
            ],
            "mimeType": "text/html",
            "partId": "1"
          }
        ]
      },
      "sizeEstimate": 65921,
      "snippet": "&amp;#192; Quoi faire pendant le confinement? À Quoi faire pendant le confinement? Ouvrir ce courriel dans votre navigateur Image QUOI FAIRE PENDANT LE CONFINEMENT? Un peu d&#39;inspirations de la part",
      "threadId": "1718e5ac42f4c25a"
    },
    {
      "historyId": "32158530",
      "id": "1718e5c311bd4fbf",
      "internalDate": "1587231281000",
      "labelIds": [
        "CATEGORY_PROMOTIONS",
        "INBOX"
      ],
      "payload": {
        "body": {
          "size": 0
        },
        "filename": "",
        "headers": [
          {
            "name": "Date",
            "value": "Sat, 18 Apr 2020 13:34:41 -0400"
          },
          {
            "name": "From",
            "value": "\"Estérel Resort\" <Info@reservations.esterel.com>"
          },
          {
            "name": "To",
            "value": "name@email.com"
          },
          {
            "name": "Subject",
            "value": "Un peu d'inspirations de la part de nos employés"
          },
          {
            "name": "Mime-Version",
            "value": "1.0"
          },
          {
            "name": "Content-Type",
            "value": "multipart/alternative; boundary=\"--==_mimepart_5e9b3a315d692_1966a725f01335264\"; charset=UTF-8"
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "7bit"
          }
        ],
        "mimeType": "multipart/alternative",
        "partId": "",
        "parts": [
          {
            "body": {
              "data": "DQoNCg0KVGhpcyBlbWFpbCB3YXMgc2VudCB0byBhcHBhcXVldEBnbWFpbC5jb20gYnkgSW5mb0BSZXNlcnZhdGlvbnMuZXN0ZXJlbC5jb20NCk1hbmFnZSBTdWJzY3JpcHRpb25zDQpodHRwOi8vbWNsaW5rcy5yZXNlcnZhdGlvbnMuZXN0ZXJlbC5jb20vYS85MTY0L3Vuc3Vic2NyaWJlLzM0NC83NjM4My9hNzU0NmFmNzU4YTcyMjI5NzBmMDY5M2FkZjk4Njg4MTFmNGJmMzU2DQpVbmRlZmluZWQNCg0K",
              "size": 228
            },
            "filename": "",
            "headers": [
              {
                "name": "Content-Type",
                "value": "text/plain; charset=UTF-8"
              },
              {
                "name": "Content-Transfer-Encoding",
                "value": "7bit"
              }
            ],
            "mimeType": "text/plain",
            "partId": "0"
          },
          {
            "body": {
              "data": "",
              "size": 56392
            },
            "filename": "",
            "headers": [
              {
                "name": "Content-Type",
                "value": "text/html; charset=UTF-8"
              },
              {
                "name": "Content-Transfer-Encoding",
                "value": "quoted-printable"
              }
            ],
            "mimeType": "text/html",
            "partId": "1"
          }
        ]
      },
      "sizeEstimate": 64200,
      "snippet": "&amp;#192; Quoi faire pendant le confinement? À Quoi faire pendant le confinement? Ouvrir ce courriel dans votre navigateur Image QUOI FAIRE PENDANT LE CONFINEMENT? Un peu d&#39;inspirations de la part",
      "threadId": "1718e5ac42f4c25a"
    }
  ]
}