name: Push tester

on:
  push:
    branches:    
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  rust_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Clippy & check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features


  rust_tests:
    strategy:
      fail-fast: true
      matrix:
        pair:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macOS-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.pair.os }}

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: Swatinem/rust-cache@v1

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features


  web_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x

      - name: Build & test
        run: |
          cd web
          yarn install --frozen-lockfile
          yarn build
          yarn test
          yarn lint

  ios_build:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: |
          HOMEBREW_NO_INSTALL_CLEANUP=1 brew install swift-protobuf

      - name: Build 
        run: |
          cd $GITHUB_WORKSPACE/web
          yarn install --frozen-lockfile
          yarn build_ios

          cd $GITHUB_WORKSPACE/ios
          pod install
          xcodebuild -workspace Exomind.xcworkspace -scheme Exomind -destination "generic/platform=iOS" CODE_SIGNING_ALLOWED=NO 

  markdown_links_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
