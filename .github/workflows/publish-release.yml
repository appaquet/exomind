name: Release publish

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish'  
        default: true
      ref:
        description: 'Tag'
        default: 'v0.X.X'
      latest:
        description: 'Latest'  
        default: true

env:
  CARGO_TERM_COLOR: always

jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        ref: ${{ github.event.inputs.ref }}


    - name: Download release files
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -x
        TAG="${{ github.event.inputs.ref }}"

        mkdir $GITHUB_WORKSPACE/assets && cd $GITHUB_WORKSPACE/assets
        hub release download $TAG

        tar -zxf exomind-server.x86_64-unknown-linux-gnu.tar.gz
        mv exomind-server exomind-server-amd64

        tar -zxf exomind-server.armv7-unknown-linux-gnueabihf.tar.gz
        mv exomind-server exomind-server-arm


    - name: Setup Docker
      run: |
        set -x

        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

        # Allows build in arm for qemu
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

        # Create builder
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx create --use --name exocore-builder 


    - name: Build & publish exomind-server Docker
      run: |
        set -x
        TAG="${{ github.event.inputs.ref }}"
        cd $GITHUB_WORKSPACE/assets/

        BUILD_PARAMS=""
        if [[ "${{ github.event.inputs.publish }}" == "true" ]]; then 
          BUILD_PARAMS="--push"
        fi

        if [[ "${{ github.event.inputs.publish }}" == "true" ]]; then 
          BUILD_PARAMS="$BUILD_PARAMS --tag appaquet/exomind-server:latest"
        fi

        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build \
          --tag appaquet/exomind-server:$TAG \
          --platform linux/amd64,linux/arm \
          --file $GITHUB_WORKSPACE/server/Dockerfile.buildx \
          $BUILD_PARAMS \
          .


    - name: Build & publish exomind-web Docker
      run: |
        set -x
        TAG="${{ github.event.inputs.ref }}"

        BUILD_PARAMS=""
        if [[ "${{ github.event.inputs.publish }}" == "true" ]]; then 
          BUILD_PARAMS="--push"
        fi

        if [[ "${{ github.event.inputs.publish }}" == "true" ]]; then 
          BUILD_PARAMS="$BUILD_PARAMS --tag appaquet/exomind-web:latest"
        fi

        mkdir $GITHUB_WORKSPACE/tmp && cd $GITHUB_WORKSPACE/tmp
        cp $GITHUB_WORKSPACE/web/nginx.conf .
        mkdir dist
        tar -zxf $GITHUB_WORKSPACE/assets/exomind-web.tar.gz -C dist/

        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build \
          --tag appaquet/exomind-web:$TAG \
          --platform linux/amd64,linux/arm \
          --file $GITHUB_WORKSPACE/web/Dockerfile \
          $BUILD_PARAMS \
          .
