{
  "historyId": "32941386",
  "id": "1749380b47e45fda",
  "messages": [
    {
      "historyId": "32941386",
      "id": "1749380b47e45fda",
      "internalDate": "1600202517000",
      "labelIds": [
        "CATEGORY_PROMOTIONS",
        "INBOX"
      ],
      "payload": {
        "body": {
          "data": "",
          "size": 64695
        },
        "filename": "",
        "headers": [
          {
            "name": "Delivered-To",
            "value": "email@gmail.com"
          },
          {
            "name": "Received",
            "value": "by 2002:a05:6838:339a:0:0:0:0 with SMTP id eb26csp3260316nkb;        Tue, 15 Sep 2020 13:42:00 -0700 (PDT)"
          },
          {
            "name": "Return-Path",
            "value": "<airtransat@mst.transatmemberservice.com>"
          },
          {
            "name": "From",
            "value": "Air Transat <transat@mst.transatmemberservice.com>"
          },
          {
            "name": "Date",
            "value": "Tue, 15 Sep 2020 16:41:57 -0400"
          },
          {
            "name": "Subject",
            "value": "Profitez de nos offres spéciales sur les vols intérieurs au Canada!"
          },
          {
            "name": "To",
            "value": "<email@gmail.com>"
          },
          {
            "name": "Reply-To",
            "value": "Do not reply <no-reply@mst.transatmemberservice.com>"
          },
          {
            "name": "MIME-Version",
            "value": "1.0"
          },
          {
            "name": "X-mailer",
            "value": "nlserver, Build 6.1.1"
          },
          {
            "name": "Message-ID",
            "value": "<NM653071F5A7BBAB79Atransat_mkt_prod1@mst.transatmemberservice.com>"
          },
          {
            "name": "Content-Type",
            "value": "text/html; charset=\"windows-1252\""
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "quoted-printable"
          }
        ],
        "mimeType": "text/html",
        "partId": ""
      },
      "sizeEstimate": 72047,
      "snippet": "Nous ensoleillons à nouveau votre quotidien, en toute sécurité Transat logo Version en ligne Vol | Forfait | Hôtel | Auto | Voyagez au Canada pour moins Voyagez au Canada pour moins Les aubaines sur",
      "threadId": "1749380b47e45fda"
    }
  ]
}